version: 2.1
# Use a package of configuration called an orb.
orbs:
    # Choose either one of the orbs below
    # welcome: circleci/welcome-orb@0.4.1
     aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
jobs:
    myjob1:  # Choose any name, such as `build`
        # The primary container, where your job's commands will run
        docker:
          - image: cimg/base:stable
        steps:
          - checkout # check out the code in the project directory
          - run: echo "hello world" # run the `echo` command
    create_infrastructure:
        docker:
          - image: amazon/aws-cli
        steps:
          - checkout
          - run:
              name: Create Cloudformation
              command: |
                aws cloudformation deploy --stack-name my-stack  --template-file template.yml --region us-east-1
    configure_infrastructure: 
        docker:
          - image: cimg/python:3.8.4 
        steps:
          - checkout
          - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
                fingerprints: ["8b:d4:ea:d8:bc:e8:38:60:31:d7:bc:c3:10:d0:34:88"] 
          - run:
              name: Install Ansible
              command: |
                # Install Ansible
                python3 -m pip install --user ansible
          - run:
              name: Run Playbook and Configure server
              command: |
                # Your command    
                ansible-playbook -i inventory playbook.yml
    smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: python3 -m pip install --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity.com/"
              # Test if website exists
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi

# Sequential workflow
workflows:
    # Name the workflow
    myWorkflow:
      jobs:
      #  - create_infrastructure
      #  - configure_infrastructure
      - somke_test